{
  "name": "express-master-boilerplate",
  "version": "1.0.0",
  "description": "A highly scalable and opinionated expressjs and node.js boilerplate focused on building back-end APIs with the best developer experience and practices.",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/Hackbyrd/express-master-boilerplate.git"
  },
  "author": "Hackbyrd",
  "license": "MIT",
  "engines": {
    "node": "12.13.0",
    "yarn": "1.19.0",
    "npm": "6.12.0"
  },
  "scripts": {
    "start": "./node_modules/foreman/nf.js start",
    "s": "yarn start:dev",
    "start:dev": "./node_modules/nodemon/bin/nodemon.js --exec \"./node_modules/foreman/nf.js --env ./config/.env.development start web=1\"",
    "mg": "yarn migrate",
    "migrate": "./node_modules/.bin/sequelize db:migrate --env development",
    "migrate:prod": "./node_modules/.bin/sequelize db:migrate --env production",
    "rb": "yarn rollback",
    "rollback": "./node_modules/.bin/sequelize db:migrate:undo --env development",
    "rollback:prod": "./node_modules/.bin/sequelize db:migrate:undo --env production",
    "model": "./node_modules/.bin/sequelize model:create --env development --name NewModel --attributes exString:string,exInt:integer,exBool:boolean,exDate:date && rm models/newmodel.js",
    "migration": "./node_modules/.bin/sequelize migration:create --env development --name add-cols-newCol-to-ExistingTable-tbl",
    "backup": "pg_dump mixbowl_dev > database/backups/backup.sql",
    "restore": "dropdb mixbowl_dev; createdb mixbowl_dev; psql mixbowl_dev < database/backups/backup.sql",
    "cron": "NODE_ENV=development node cronjobs",
    "gen": "node app/generate generate",
    "str": "node app/generate stringify",
    "seed": "node ./database/seed",
    "gulp": "./node_modules/gulp-cli/bin/gulp.js",
    "format": "NODE_ENV=development node format.js",
    "ngrok": "./node_modules/ngrok/bin/ngrok http 8000",
    "ngrok:auth": "./node_modules/ngrok/bin/ngrok authtoken",
    "redis": "./redis/src/redis-server",
    "zoo": "./kafka/bin/zookeeper-server-start.sh ./kafka/config/zookeeper.properties",
    "kafka": "./kafka/bin/kafka-server-start.sh ./kafka/config/server.properties",
    "test": "./node_modules/mocha/bin/mocha \"test/**/*.js\" --timeout 100000 --exit",
    "t": "yarn test",
    "stage": "git push origin dev && git checkout staging && git merge dev && git push origin staging && git checkout dev",
    "prod": "git push origin dev && git checkout master && git merge dev && git push origin master && git checkout dev",
    "deploy": "yarn stage && yarn prod"
  },
  "dependencies": {
    "@hapi/joi": "16.1.7",
    "@hapi/joi-date": "2.0.1",
    "@sendgrid/mail": "6.4.0",
    "accounting": "0.4.1",
    "async": "3.1.0",
    "bcrypt": "3.0.6",
    "body-parser": "1.19.0",
    "compression": "1.7.4",
    "convert-units": "2.3.4",
    "cookie-parser": "1.4.4",
    "cors": "2.8.5",
    "cron": "1.7.2",
    "csv-parser": "2.3.1",
    "currency.js": "1.2.2",
    "dotenv": "8.1.0",
    "ejs": "2.7.1",
    "express": "4.17.1",
    "express-rate-limit": "5.0.0",
    "foreman": "3.0.1",
    "helmet": "3.21.1",
    "heroku-ssl-redirect": "0.0.4",
    "i18n": "0.8.3",
    "jwt-simple": "0.5.6",
    "kafka-node": "4.1.3",
    "lodash": "4.17.15",
    "moment": "2.24.0",
    "moment-timezone": "0.5.26",
    "multer": "1.4.2",
    "passport": "0.4.0",
    "passport-jwt": "4.0.0",
    "passport-local": "1.0.0",
    "pg": "7.12.1",
    "pg-hstore": "2.3.3",
    "querystring": "0.2.0",
    "rate-limit-redis": "1.6.0",
    "request": "2.88.0",
    "sanitize-filename": "1.6.3",
    "sequelize": "5.19.2",
    "sequelize-cli": "5.5.1",
    "slugify": "1.3.5",
    "socket.io": "2.3.0",
    "socket.io-emitter": "3.1.1",
    "socket.io-redis": "5.2.0",
    "throng": "4.0.0"
  },
  "devDependencies": {
    "chai": "4.2.0",
    "gulp": "4.0.2",
    "gulp-cli": "2.2.0",
    "mocha": "6.2.1",
    "morgan": "1.9.1",
    "ngrok": "3.2.5",
    "nodemon": "1.19.3",
    "onchange": "6.1.0",
    "prettier": "1.18.2",
    "supertest": "4.0.2"
  }
}
